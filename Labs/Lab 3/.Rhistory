xlim = c(0, 1.1*max(bhdiameter)),
ylim = c(0, 1.1*max(height)))
resid <- with(spruce,predict(spruce.lm, data.frame(bhdiameter)))
with(spruce,{segments(bhdiameter, height, bhdiameter, resid)})
abline(spruce.lm)
plot(bhdiameter, height,
main = "Height v, BHDiameter MSS",
ylab = "Height (m)",
xlab = "Breast Height Diameter (cm)",
pch = 21, bg = "Blue", cex = 1.2,
xlim = c(0, 1.1*max(bhdiameter)),
ylim = c(0, 1.1*max(height)))
with(spruce, segments(diameter, mean(height), bhdiameter, resid,col = "Red"))
abline(h = mean(height))
plot(bhdiameter, height,
main = "Height v, BHDiameter TSS",
ylab = "Height (m)",
xlab = "Breast Height Diameter (cm)",
pch = 21, bg = "Blue", cex = 1.2,
xlim = c(0, 1.1*max(bhdiameter)),
ylim = c(0, 1.1*max(height)))
with(spruce, segments(bhdiameter, mean(height), bhdiameter, height, col = "Green"))
abline(h=mean(height))
layout <- layout(matrix(1:4, nr = 2, nc = 2, byrow = TRUE))
plot(bhdiameter, height,
main = "Height Versus Breast Height Diameter",
ylab = "Height (m)",
xlab = "Breast Height Diameter (cm)",
pch = 21, bg = "Blue", cex = 1.2,
xlim = c(0, 1.1*max(bhdiameter)),
ylim = c(0, 1.1*max(height)))
abline(spruce.lm)
plot(bhdiameter, height,
main = "Height v, BHDiameter RSS",
ylab = "Height (m)",
xlab = "Breast Height Diameter (cm)",
pch = 21, bg = "Blue", cex = 1.2,
xlim = c(0, 1.1*max(bhdiameter)),
ylim = c(0, 1.1*max(height)))
resid <- with(spruce,predict(spruce.lm, data.frame(bhdiameter)))
with(spruce,{segments(bhdiameter, height, bhdiameter, resid)})
abline(spruce.lm)
plot(bhdiameter, height,
main = "Height v, BHDiameter MSS",
ylab = "Height (m)",
xlab = "Breast Height Diameter (cm)",
pch = 21, bg = "Blue", cex = 1.2,
xlim = c(0, 1.1*max(bhdiameter)),
ylim = c(0, 1.1*max(height)))
with(spruce, segments(diameter, mean(height), bhdiameter, resid,col = "Red"))
abline(spruce.lm)
abline(h = mean(height))
plot(bhdiameter, height,
main = "Height v, BHDiameter TSS",
ylab = "Height (m)",
xlab = "Breast Height Diameter (cm)",
pch = 21, bg = "Blue", cex = 1.2,
xlim = c(0, 1.1*max(bhdiameter)),
ylim = c(0, 1.1*max(height)))
with(spruce, segments(bhdiameter, mean(height), bhdiameter, height, col = "Green"))
abline(h=mean(height))
layout <- layout(matrix(1:4, nr = 2, nc = 2, byrow = TRUE))
plot(bhdiameter, height,
main = "Height Versus Breast Height Diameter",
ylab = "Height (m)",
xlab = "Breast Height Diameter (cm)",
pch = 21, bg = "Blue", cex = 1.2,
xlim = c(0, 1.1*max(bhdiameter)),
ylim = c(0, 1.1*max(height)))
abline(spruce.lm)
plot(bhdiameter, height,
main = "Height v, BHDiameter RSS",
ylab = "Height (m)",
xlab = "Breast Height Diameter (cm)",
pch = 21, bg = "Blue", cex = 1.2,
xlim = c(0, 1.1*max(bhdiameter)),
ylim = c(0, 1.1*max(height)))
resid <- with(spruce,predict(spruce.lm, data.frame(bhdiameter)))
with(spruce,{segments(bhdiameter, height, bhdiameter, resid)})
abline(spruce.lm)
plot(bhdiameter, height,
main = "Height v, BHDiameter MSS",
ylab = "Height (m)",
xlab = "Breast Height Diameter (cm)",
pch = 21, bg = "Blue", cex = 1.2,
xlim = c(0, 1.1*max(bhdiameter)),
ylim = c(0, 1.1*max(height)))
with(spruce, segments(diameter, mean(height), bhdiameter, resid,col = "Red"))
abline(spruce.lm)
abline(h = mean(height))
plot(bhdiameter, height,
main = "Height v, BHDiameter TSS",
ylab = "Height (m)",
xlab = "Breast Height Diameter (cm)",
pch = 21, bg = "Blue", cex = 1.2,
xlim = c(0, 1.1*max(bhdiameter)),
ylim = c(0, 1.1*max(height)))
with(spruce, segments(bhdiameter, mean(height), bhdiameter, height, col = "Green"))
abline(h = mean(height))
```{r}
RSS <- with(spruce, sum((height - resid)^2))
RSS
MSS
RSS <- with(spruce, sum((height - resid)^2))
RSS
MSS <- with(spruce, sum((resid - mean(height))^2))
MSS
RSS <- with(spruce, sum((height - resid)^2))
RSS
MSS <- with(spruce, sum((resid - mean(height))^2))
MSS
TSS <- with(spruce, sum(height ~ mean(height))^2))
RSS <- with(spruce, sum((height - resid)^2))
RSS
MSS <- with(spruce, sum((resid - mean(height))^2))
MSS
TSS <- with(spruce, sum((height ~ mean(height))^2))
RSS <- with(spruce, sum((height - resid)^2))
RSS
MSS <- with(spruce, sum((resid - mean(height))^2))
MSS
TSS <- with(spruce, sum((height ~ mean(height))^2)
TSS
source("~/.active-rstudio-document", echo=TRUE)
RSS <- with(spruce, sum((height - resid)^2))
RSS
MSS <- with(spruce, sum((resid - mean(height))^2))
MSS
TSS <- with(spruce, sum((height - mean(height))^2))
TSS
RSS <- with(spruce, sum((height - resid)^2))
RSS
MSS <- with(spruce, sum((resid - mean(height))^2))
MSS
TSS <- with(spruce, sum((height - mean(height))^2))
print("TSS equals" TSS)
RSS <- with(spruce, sum((height - resid)^2))
RSS
MSS <- with(spruce, sum((resid - mean(height))^2))
MSS
TSS <- with(spruce, sum((height - mean(height))^2))
print("TSS equals" + TSS)
RSS <- with(spruce, sum((height - resid)^2))
RSS
MSS <- with(spruce, sum((resid - mean(height))^2))
MSS
TSS <- with(spruce, sum((height - mean(height))^2))
print("TSS equals:") TSS
RSS <- with(spruce, sum((height - resid)^2))
RSS
MSS <- with(spruce, sum((resid - mean(height))^2))
MSS
TSS <- with(spruce, sum((height - mean(height))^2))
print("TSS equals:")
TSS
source("~/.active-rstudio-document", echo=TRUE)
RSS <- with(spruce, sum((height - resid)^2))
RSS
MSS <- with(spruce, sum((resid - mean(height))^2))
MSS
TSS <- with(spruce, sum((height - mean(height))^2))
print("TSS equals:" TSS)
RSS <- with(spruce, sum((height - resid)^2))
RSS
MSS <- with(spruce, sum((resid - mean(height))^2))
MSS
TSS <- with(spruce, sum((height - mean(height))^2))
print(""TSS equals:" TSS")
RSS <- with(spruce, sum((height - resid)^2))
RSS
MSS <- with(spruce, sum((resid - mean(height))^2))
MSS
TSS <- with(spruce, sum((height - mean(height))^2))
TSS
RSS <- with(spruce, sum((height - resid)^2))
RSS
MSS <- with(spruce, sum((resid - mean(height))^2))
MSS
TSS <- with(spruce, sum((height - mean(height))^2))
TSS
RSS + MSS
RSS + MSS == TSS
RSS + MSS == TSS
RSS + MSS
TSS
source("~/.active-rstudio-document", echo=TRUE)
lo = layout(matrix(1:4, nr=2, nc=2, byrow=TRUE))
mycex=1.0
with(spruce, plot(height~diameter, main="Tree Height vs. BHDIameter",
xlab="Breast Height Diameter (cm)", ylab="Height (m)",
bg="Blue", pch=21, cex=1.2, ylim=c(0,1.1*max(height)), xlim=c(0,1.1*max(diameter))))
abline(spruce.lm)
with(spruce, plot(height~diameter, main="RSS",
xlab="Breast Height Diameter (cm)", ylab="Height (m)",
bg="Blue", pch=21, cex=1.2, ylim=c(0,1.1*max(height)), xlim=c(0,1.1*max(diameter))))
predictedheight=with(spruce,predict(spruce.lm,data.frame(diameter)))
with(spruce,{
segments(diameter,height,diameter,predictedheight)
})
abline(spruce.lm)
with(spruce, plot(height~diameter, main="MSS",
xlab="Breast Height Diameter (cm)", ylab="Height (m)",
bg="Blue", pch=21, cex=1.2, ylim=c(0,1.1*max(height)), xlim=c(0,1.1*max(diameter))))
with(spruce, segments(diameter,mean(height),diameter,predictedheight,col="Red"))
abline(spruce.lm)
abline(h=mean(height))
with(spruce, plot(height~diameter, main="TSS",
xlab="Breast Height Diameter (cm)", ylab="Height (m)",
bg="Blue", pch=21, cex=1.2, ylim=c(0,1.1*max(height)), xlim=c(0,1.1*max(diameter))))
with(spruce, segments(diameter,mean(height),diameter,height,col="Green"))
abline(h=mean(height))
summary(spruce.lm)
summary(spruce.lm)
summary(spruce.lm)
RSS <- with(spruce, sum((height - resid)^2))
RSS
MSS <- with(spruce, sum((resid - mean(height))^2))
MSS
TSS <- with(spruce, sum((height - mean(height))^2))
TSS
MSS/TSS
predict(spruce.lm, data.frame(bhdiameter = c(15, 18, 20)))
predict(spruce.lm, data.frame(bhdiameter = 15)
predict(spruce.lm, data.frame(bhdiameter = 14)
predict(spruce.lm, data.frame(bhdiameter =- 14)
predict(spruce.lm, bhdiameter = 15))
predict(spruce.lm, bhdiameter = 15)
predict(spruce.lm, bhdiameter = 15)
predict(spruce.lm, bhdiameter = 18)
predict(spruce.lm, bhdiameter = 20)
predict(spruce.lm, data.frame(diameter=c(15, 18, 20)))
predict(spruce.lm, bhdiameter = 15)
predict(spruce.lm, bhdiameter = 18)
predict(spruce.lm, bhdiameter = 20)
library(ggplot2)
library(ggplot2)
g=ggplot(fin.df, aes(x=RATIO,y=HEAT,colour=RATIO))
library(ggplot2)
g=ggplot(fin.df, aes(x=BHDIAMETER,y=HEIGHT,colour=RATIO))
library(ggplot2)
g=ggplot(spruce, aes(x=BHDIAMETER,y=HEIGHT,colour=RATIO))
g=g+geom_point() + geom_line()+ geom_smooth(method="lm")
g+ggtitle("HEAT Vs RATIO")
library(ggplot2)
g=ggplot(spruce, aes(x=BHDiameter,y=Height,colour=RATIO))
g=g+geom_point() + geom_line()+ geom_smooth(method="lm")
g+ggtitle("HEAT Vs RATIO")
library(ggplot2)
g=ggplot(spruce, aes(x=BHDiameter,y=Height,colour=Height))
g=g+geom_point() + geom_line()+ geom_smooth(method="lm")
g+ggtitle("HEAT Vs RATIO")
library(ggplot2)
g=ggplot(spruce, aes(x=BHDiameter,y=Height,colour=BHDiameter))
g=g+geom_point() + geom_line()+ geom_smooth(method="lm")
g+ggtitle("HEAT Vs RATIO")
library(ggplot2)
g=ggplot(spruce, aes(x=BHDiameter,y=Height,colour=BHDiameter))
g=g+geom_point() + geom_line()+ geom_smooth(method="lm")
g+ggtitle("Height vs Breast Height Diameter of Spruce Trees")
library(ggplot2)
g=ggplot(spruce, aes(x=BHDiameter,y=Height,colour=BHDiameter))
g=g+geom_point() + geom_line()+ geom_smooth(method="lm")
g+ggtitle("Height v. Breast Height Diameter of Spruce Trees")
library(ggplot2)
gg <- ggplot(data=spruce, aes(x=BHDiameter, y=Height))
gg <- gg + geom_point(aes(color=BHDiameter)) + geom_line()
gg <- gg + geom_smooth(method=lm, color="Blue")
gg <- gg + ggtitle("Height vs. Breast Height Diameter") + theme(plot.title=element_text(hjust=0.5))
gg
library(ggplot2)
g=ggplot(spruce, aes(x=BHDiameter,y=Height,colour=BHDiameter))
g=g+geom_point() + geom_line()+ geom_smooth(method="lm")
g+ggtitle("Height v. Breast Height Diameter of Spruce Trees")
source("~/MATH 4753/Labs/Lab 3/mylab3.R", echo=TRUE)
#make the explained deviations (explained by the model)
with(fin.df, segments(RATIO,mean(HEAT),RATIO,yhat,col="Red"))
abline(ht.lm)
source("~/MATH 4753/Labs/Lab 3/mylab3.R", echo=TRUE)
#This will be a different path if in the lab or at home
dird="\\Users\\nico\\Documents\\MATH 4753\\Labs\\Lab 3\\"
g+ggtitle("HEAT Vs RATIO")
knitr::opts_chunk$set(echo = TRUE)
getwd()
spruce <- read.csv("SPRUCE.csv")
head(spruce)
bhdiameter <- spruce$BHDiameter
height <- spruce$Height
scatter <- plot(bhdiameter, height,
main = "Height Versus Breast Height Diameter of Spruce Trees",
ylab = "Height (m)",
xlab = "Breast Height Diameter (cm)",
pch = 21, bg = "Blue", cex = 1.2,
xlim = c(0, 1.1*max(bhdiameter)),
ylim = c(0, 1.1*max(height)))
scatter
library(s20x)
layout(matrix(1:3, nr = 3))
trend1 <- trendscatter(Height ~ BHDiameter, f = 0.5, data = spruce)
trend2 <= trendscatter(Height ~ BHDiameter, f = 0.6, data = spruce)
trend3 <- trendscatter(Height ~ BHDiameter, f = 0.7, data = spruce)
spruce.lm <- with(spruce, lm(height ~ bhdiameter))
plot(bhdiameter, height,
main = "Height Versus Breast Height Diameter of Spruce Trees",
ylab = "Height (m)",
xlab = "Breast Height Diameter (cm)",
pch = 21, bg = "Blue", cex = 1.2,
xlim = c(0, 1.1*max(bhdiameter)),
ylim = c(0, 1.1*max(height)))
abline(spruce.lm)
layout <- layout(matrix(1:4, nr = 2, nc = 2, byrow = TRUE))
plot(bhdiameter, height,
main = "Height Versus Breast Height Diameter",
ylab = "Height (m)",
xlab = "Breast Height Diameter (cm)",
pch = 21, bg = "Blue", cex = 1.2,
xlim = c(0, 1.1*max(bhdiameter)),
ylim = c(0, 1.1*max(height)))
abline(spruce.lm)
plot(bhdiameter, height,
main = "Height v, BHDiameter RSS",
ylab = "Height (m)",
xlab = "Breast Height Diameter (cm)",
pch = 21, bg = "Blue", cex = 1.2,
xlim = c(0, 1.1*max(bhdiameter)),
ylim = c(0, 1.1*max(height)))
resid <- with(spruce,predict(spruce.lm, data.frame(bhdiameter)))
with(spruce,{segments(bhdiameter, height, bhdiameter, resid)})
abline(spruce.lm)
plot(bhdiameter, height,
main = "Height v, BHDiameter MSS",
ylab = "Height (m)",
xlab = "Breast Height Diameter (cm)",
pch = 21, bg = "Blue", cex = 1.2,
xlim = c(0, 1.1*max(bhdiameter)),
ylim = c(0, 1.1*max(height)))
with(spruce, segments(diameter, mean(height), bhdiameter, resid,col = "Red"))
abline(spruce.lm)
abline(h = mean(height))
plot(bhdiameter, height,
main = "Height v, BHDiameter TSS",
ylab = "Height (m)",
xlab = "Breast Height Diameter (cm)",
pch = 21, bg = "Blue", cex = 1.2,
xlim = c(0, 1.1*max(bhdiameter)),
ylim = c(0, 1.1*max(height)))
with(spruce, segments(bhdiameter, mean(height), bhdiameter, height, col = "Green"))
abline(h = mean(height))
RSS <- with(spruce, sum((height - resid)^2))
RSS
MSS <- with(spruce, sum((resid - mean(height))^2))
MSS
TSS <- with(spruce, sum((height - mean(height))^2))
TSS
MSS/TSS
RSS + MSS == TSS
RSS + MSS
TSS
summary(spruce.lm)
predict(spruce.lm, bhdiameter = 15)
predict(spruce.lm, bhdiameter = 18)
predict(spruce.lm, bhdiameter = 20)
library(ggplot2)
g=ggplot(spruce, aes(x=BHDiameter,y=Height,colour=BHDiameter))
g=g+geom_point() + geom_line()+ geom_smooth(method="lm")
g+ggtitle("Height v. Breast Height Diameter of Spruce Trees")
library(s20x)
layout(matrix(1:3, nr = 3))
trend1 <- trendscatter(Height ~ BHDiameter, f = 0.5, data = spruce)
trend2 <- trendscatter(Height ~ BHDiameter, f = 0.6, data = spruce)
trend3 <- trendscatter(Height ~ BHDiameter, f = 0.7, data = spruce)
layout <- layout(matrix(1:4, nr = 2, nc = 2, byrow = TRUE))
plot(bhdiameter, height,
main = "Height Versus Breast Height Diameter",
ylab = "Height (m)",
xlab = "Breast Height Diameter (cm)",
pch = 21, bg = "Blue", cex = 1.2,
xlim = c(0, 1.1*max(bhdiameter)),
ylim = c(0, 1.1*max(height)))
abline(spruce.lm)
plot(bhdiameter, height,
main = "Height v, BHDiameter RSS",
ylab = "Height (m)",
xlab = "Breast Height Diameter (cm)",
pch = 21, bg = "Blue", cex = 1.2,
xlim = c(0, 1.1*max(bhdiameter)),
ylim = c(0, 1.1*max(height)))
resid <- with(spruce,predict(spruce.lm, data.frame(bhdiameter)))
with(spruce,{segments(bhdiameter, height, bhdiameter, resid)})
abline(spruce.lm)
plot(bhdiameter, height,
main = "Height v, BHDiameter MSS",
ylab = "Height (m)",
xlab = "Breast Height Diameter (cm)",
pch = 21, bg = "Blue", cex = 1.2,
xlim = c(0, 1.1*max(bhdiameter)),
ylim = c(0, 1.1*max(height)))
with(spruce, segments(diameter, mean(height), bhdiameter, resid,col = "Red"))
abline(spruce.lm)
abline(h = mean(height))
plot(bhdiameter, height,
main = "Height v, BHDiameter TSS",
ylab = "Height (m)",
xlab = "Breast Height Diameter (cm)",
pch = 21, bg = "Blue", cex = 1.2,
xlim = c(0, 1.1*max(bhdiameter)),
ylim = c(0, 1.1*max(height)))
with(spruce, segments(bhdiameter, mean(height), bhdiameter, height, col = "Green"))
abline(h = mean(height))
library(ggplot2)
g=ggplot(spruce, aes(x=BHDiameter,y=Height,col=BHDiameter))
g=g+geom_point() + geom_line()+ geom_smooth(method="lm")
g+ggtitle("Height v. Breast Height Diameter of Spruce Trees")
library(ggplot2)
g=ggplot(spruce, aes(x=BHDiameter,y=Height))
g=g+geom_point() + geom_line()+ geom_smooth(method="lm")
g+ggtitle("Height v. Breast Height Diameter of Spruce Trees")
library(ggplot2)
g=ggplot(spruce, aes(x=BHDiameter,y=Height, col = "blue"))
g=g+geom_point() + geom_line()+ geom_smooth(method="lm")
g+ggtitle("Height v. Breast Height Diameter of Spruce Trees")
library(ggplot2)
g=ggplot(spruce, aes(x=BHDiameter,y=Height, col = "Blue"))
g=g+geom_point() + geom_line()+ geom_smooth(method="lm")
g+ggtitle("Height v. Breast Height Diameter of Spruce Trees")
library(ggplot2)
g=ggplot(spruce, aes(x=BHDiameter,y=Height, col = BHDiameter))
g=g+geom_point() + geom_line()+ geom_smooth(method="lm")
g+ggtitle("Height v. Breast Height Diameter of Spruce Trees")
source("~/.active-rstudio-document", echo=TRUE)
library(ggplot2)
g=ggplot(spruce, aes(x=BHDiameter,y=Height, col = bhdiameter))
g=g+geom_point() + geom_line()+ geom_smooth(method="lm")
g+ggtitle("Height v. Breast Height Diameter of Spruce Trees")
library(ggplot2)
g=ggplot(spruce, aes(x=BHDiameter,y=Height, col = bhdiameter))
g=g+geom_point() + geom_line()+ geom_smooth(method="lm")
g+ggtitle("Height v. Breast Height Diameter of Spruce Trees")
library(ggplot2)
g=ggplot(spruce, aes(x=BHDiameter,y=Height))
g=g+geom_point() + geom_line()+ geom_smooth(method="lm", color = "Blue")
g+ggtitle("Height v. Breast Height Diameter of Spruce Trees")
# INPUTS
inputPanel(
selectInput("plotg", "Choose plot type",
list(`points` = c("spruce.lm", "points", "joined points")
)
)
)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2: slr
library(ggplot2)
# DATA
spruce.df = read.csv("SPRUCE.csv")#MS pg478
# INPUTS
inputPanel(
selectInput("plotg", "Choose plot type",
list(`points` = c("spruce.lm", "points", "joined points")
)
)
)
# INPUTS
inputPanel()
# INPUTS
inputPanel(
selectInput("plotg", "Choose plot type",
list(`points` = c("spruce.lm", "points", "joined points")
)
)
)
# INPUTS
inputPanel(
selectInput("plotg", "Choose plot type",
list(`points` = c("g", "gheat", "gratio"),
`point size` = c("gsheat", "gsratio")
)
)
)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
# DATA
spruce.df = read.csv("SPRUCE.csv")#MS pg478
library(ggplot2)
# DATA
spruce.df = read.csv(file.choose())#MS pg478
# INPUTS
inputPanel(
selectInput("plotg", "Choose plot type",
list(`points` = c("spruce.lm", "points", "joined points")
)
)
)
library(ggplot2)
# DATA
spruce = read.csv("SPRUCE.csv")#MS pg478
# INPUTS
inputPanel(
selectInput("plotg", "Choose plot type",
list(`points` = c("spruce.lm", "points", "lined points"),
)
)
)
library(ggplot2)
# DATA
spruce = read.csv("SPRUCE.csv")#MS pg478
# INPUTS
inputPanel(
selectInput("plotg", "Choose plot type",
list(`points` = c("spruce.lm", "points", "lined points")
)
)
)
