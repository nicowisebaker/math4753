setwd("~/MATH 4753/Lab 1")
setwd("~/MATH 4753/Labs/Lab 1")
ddt = read.csv("DDT.csv")
ddt = read.csv("DDT.csv")
ddt = read.csv("DDT.csv")
# First six lines
head(ddt)
ddt <- read.csv("DDT.csv")
head(ddt)
class(ddt)
#What class is the object ddt?
class(ddt)
#what are the variables in the data frame?
names(ddt)
# Manual entry
x=scan()
# Summarize the variables
summary(ddt)
#Use the c "combine" operator to make vectors
y=c(1,2,3,4,5)
# manipulate the data frame
#Find the fish with weight more than 800gms
with(ddt, ddt[WEIGHT>800,])
#place the output in an object
b800=with(ddt, ddt[WEIGHT>800,])
#Summarize it
summary(b800)
# Use combination boolean expressions to subset
with(ddt, ddt[WEIGHT>800 & SPECIES=="LMBASS",])
#ordering data frames
with(ddt,ddt[order(WEIGHT),])
#More complex orderings
with(ddt,ddt[order(SPECIES,WEIGHT),])
with(ddt,ddt[order(SPECIES,DDT),])
#Using dplyr
library(dplyr)
library(ggplot2)
ddt %>% filter(WEIGHT > 200, LENGTH > 30, DDT < 300) %>% mutate(AREA = LENGTH*WEIGHT) %>% ggplot(aes(x=AREA,y=DDT,fill=RIVER)) + geom_boxplot() + ggtitle("How to use dplyr and ggplot")
## Making vectors
v=1:10
v
2*v
2*v^2
sqrt(v)
#make  matrix
#nr=nu. of rows, byrow=TRUE, fill by row
mat=matrix(1:10,nr=5,nc=2,byrow=TRUE)
mat
#Adding names to columns and rows
#rep = repeat, repeat "r" 5 times
colnames(mat)=c("c1","c2")
rownames(mat)=paste(rep("r",5),1:5,sep="")
#entering the name of the object releases its contents
mat
#Use tables to summarize and plot categorical variables
sp=with(ddt,table(SPECIES))
sp
barplot(sp)
pie(sp,col=1:4)
#2-D tables
spriv=with(ddt,table(SPECIES,RIVER))
spriv
barplot(spriv)
#Add some options to make the graph more readable
barplot(spriv,beside=TRUE,col=1:3)
#2-D tables with reversing the variables
rivsp=with(ddt,table(RIVER,SPECIES))
rivsp
#Row and column sums
rowSums(rivsp)
colSums(rivsp)
#Proportion of the column totals
rivsp/colSums(rivsp)
#
barplot(rivsp,col=rainbow(4))
#Embellish the graphic using colors and a legend
barplot(rivsp,beside=TRUE,col=rainbow(4))
with(ddt,legend(1,80, leg=levels(RIVER),bty="n",fill=rainbow(4),cex=0.8))
head(fishcol)
#Add river text
text(WEIGHT~LENGTH,RIVER,pos=2,cex=0.5,data=ddt)
#The above plot is messy -- can we do better? Use coplots
coplot(WEIGHT~LENGTH|RIVER,data=ddt,col=fishcol)
#How to interpret the coplot (color here is redundant)
coplot(WEIGHT~LENGTH|RIVER,data=ddt,col=rivcol)
#Given the combinations of all levels of SPECIES and RIVER = RIVER*SPECIES
coplot(WEIGHT~LENGTH|RIVER*SPECIES,data=ddt,col=fishcol)
#boxplots of LENGTH by RIVER
boxplot(LENGTH~RIVER,col="Green",data=ddt)
#boxplots of each quantitative variable
#Notice the use of layout()
layout(matrix(c(1,2,3),nr=1,nc=3))# 1 row 3 cols
layout.show(3)
with(ddt,boxplot(LENGTH,ylab="LENGTH",col="Blue",notch=TRUE))
with(ddt,boxplot(WEIGHT,ylab="WEIGHT",col="Green",notch=TRUE))
with(ddt,boxplot(MILE,ylab="MILE",col="Red",notch=TRUE))
# How to use a pre-made function
# highlight and send the complete function to R
scatterhist = function(x, y, xlab="", ylab=""){
zones=matrix(c(2,0,1,3), ncol=2, byrow=TRUE)
layout(zones, widths=c(4/5,1/5), heights=c(1/5,4/5))
xhist = hist(x, plot=FALSE)
yhist = hist(y, plot=FALSE)
top = max(c(xhist$counts, yhist$counts))
par(mar=c(3,3,1,1))
plot(x,y)
par(mar=c(0,3,1,1))
barplot(xhist$counts, axes=FALSE, ylim=c(0, top), space=0)
par(mar=c(3,0,1,1))
barplot(yhist$counts, axes=FALSE, xlim=c(0, top), space=0, horiz=TRUE)
par(oma=c(3,3,0,0))
mtext(xlab, side=1, line=1, outer=TRUE, adj=0,
at=.8 * (mean(x) - min(x))/(max(x)-min(x)))
mtext(ylab, side=2, line=1, outer=TRUE, adj=0,
at=(.8 * (mean(y) - min(y))/(max(y) - min(y))))
}
with(ddt, scatterhist(LENGTH,WEIGHT, xlab="LENGTH"))
#Make a histogram
with(ddt, hist(DDT))
library(data.table)
ddt <- read.csv("DDT.csv")
# First six lines
head(ddt)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
getwd()
head(ddt)
ddt[ddt$SPECIES == "CCATFISH"]
ddt[ddt$SPECIES == "CCATFISH",]
ddt[ddt$SPECIES == "CCATFISH" & ddt$LENGTH > 50,]
head(ddt)
table(ddt)
## Task 2
```{r}
table(ddt$SPECIES)
ddt[ddt$SPECIES == "LMBASS" & ddt$WEIGHT > 800,]
dd[ddt$RIVER == "SCM" & ddt$DDT > 4.0,]
ddt[ddt$RIVER == "SCM" & ddt$DDT > 4.0,]
summary(ddt)
mean(L)
mean(L)
L <- mean(ddt[ddt$LENGTH])
L
l
length <- mean(ddt[ddt$LENGTH])
meanLength
meanLength <- mean(ddt[ddt$LENGTH])
meanLength <- mean(ddt$LENGTH)
meanLength
stdDevWt <- standardDeviation(ddt$WEIGHT)
stdDevWt
stdDevWt <- standardDeviation(ddt$WEIGHT)
stdDevWt <- sd(ddt$WEIGHT)
stdDevWt
knitr::opts_chunk$set(echo = TRUE)
weightSD <- sd(ddt$WEIGHT)
weightSD
lengthMean <- mean(ddt$LENGTH)
lengthMean
weightSD <- sd(ddt$WEIGHT)
weightSD
with(ddt,WEIGHT)
lengthMean <- mean(ddt$LENGTH)
lengthMean
weightSD <- sd(ddt$WEIGHT)
weightSD
with(ddt,plot(WEIGHT,LENGTH)
with(ddt,plot(ddt$WEIGHT,ddt$LENGTH)
lengthMean <- mean(ddt$LENGTH)
lengthMean <- mean(ddt$LENGTH)
lengthMean
weightSD <- sd(ddt$WEIGHT)
weightSD
with(ddt,plot(ddt$WEIGHT,ddt$LENGTH)
with(ddt,plot(ddt$WEIGHT,ddt$LENGTH))
with(ddt,plot(WEIGHT,LENGTH))
lengthMean <- mean(ddt$LENGTH)
lengthMean
weightSD <- sd(ddt$WEIGHT)
weightSD
with(ddt,plot(WEIGHT,LENGTH))
v = 1:20
v/20
lengthMean <- mean(ddt$LENGTH)
lengthMean
weightSD <- sd(ddt$WEIGHT)
weightSD
with(ddt,plot(WEIGHT,LENGTH))
v = 1:20
v/20
length <- ddt$LENGTH
mean(length)
weight <- ddt$WEIGHT
sd(weight)
with(ddt,plot(WEIGHT,LENGTH))
v = 1:20
v/20
library(ggplot2)
g <- ggplot(data = ddt, aes(x = WIGHT, y = LENGTH, col = SPECIES))
g <- ggplot(data = ddt, aes(x = WEIGHT, y = LENGTH, col = SPECIES))
g <- ggplot(data = ddt, aes(x = WEIGHT, y = LENGTH))
g
g <- geom_point()
library(ggplot2)
g <- ggplot(data = ddt, aes(x = WEIGHT, y = LENGTH))
g <- geom_point()
g
g <- g+ geom_point()
g <- g + geom_point()
g <- ggplot(data = ddt, aes(x = WEIGHT, y = LENGTH, col = SPECIES))
library(ggplot2)
g <- ggplot(data = ddt, aes(x = WEIGHT, y = LENGTH, col = SPECIES))
g <- g + geom_point()
g
library(ggplot2)
g <- ggplot(data = ddt, aes(x = WEIGHT, y = LENGTH, col = SPECIES))
g <- g + geom_point() + ggtitle(Nico Wisebaker)
library(ggplot2)
g <- ggplot(data = ddt, aes(x = WEIGHT, y = LENGTH, col = SPECIES))
g <- g + geom_point() + ggtitle("Nico Wisebaker")
g
g <- g + geom_point() + ggtitle("Nico Wisebaker's Plot")
library(ggplot2)
g <- ggplot(data = ddt, aes(x = WEIGHT, y = LENGTH, col = SPECIES))
g <- g + geom_point() + ggtitle("Nico Wisebaker's Plot")
g
g <- g + geom_point() + ggtitle("Nico Wisebaker's Scatter Plot")
library(ggplot2)
g <- ggplot(data = ddt, aes(x = WEIGHT, y = LENGTH, col = SPECIES))
g <- g + geom_point() + ggtitle("Nico Wisebaker's Scatter Plot")
g
## Task 6
v < - Intro2R::myreadxl()
v <- Intro2R::myreadxl()
v <- Intro2R::myreadxl()
library(Intro2R)
library(Intro2R)
v <- Intro2R::myreadxl()
v <- Intro2R::shinyddt()
